from telebot import*
from telebot import types
import sqlite3
from datetime import datetime, timedelta
from time import sleep

token = '6362477321:AAHDb8DSRHey2lRc0oki_i4uigQFnczzIzI' # –≠—Ç–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
bot = telebot.TeleBot(token)

clickIdTimes = {}
promocode = ['mafia', 'l1nkooln']

def checkClick(chat_id, timer_dict, timeout):
    if chat_id not in timer_dict or timer_dict[chat_id] < datetime.now() - timedelta(seconds=timeout):
        timer_dict[chat_id] = datetime.now()
        return True
    return False


print(checkClick(10, clickIdTimes, timeout=1))
print(checkClick(10, clickIdTimes, timeout=1))
sleep(2)
print(checkClick(10, clickIdTimes, timeout=1))
print(checkClick(10, clickIdTimes, timeout=1))

def findLen(str):
    counter = 0
    for i in str:
        counter += 1
    return counter

@bot.message_handler(commands=['start'])
def button(message):
    chat_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bt7 = types.KeyboardButton('–î–æ–¥–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è')
    markup.add(bt7)
    # admins_id = [1090256518, 1132004570]
    # for admin in admins_id:
    #     if message.from_user.id == admin:
    #         bt8 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤')
    #         markup.add(bt8)
    #     else:
    #         pass
    bot.send_message(chat_id, f'<b>–ü—Ä–∏–≤—ñ—Ç {message.from_user.first_name}üëã!</b> <b>–©–æ –±–∞–∂–∞—î—à –æ–±—Ä–∞—Ç–∏?</b>',
        parse_mode='html', reply_markup=markup)
    
@bot.message_handler(content_types=['text'])
def main(message):
    chat_id = message.chat.id
    if message.chat.type == 'private':
        if message.text == '–î–æ–¥–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è':
            a = types.ReplyKeyboardRemove()
            # bot.send_message(message.from_user.id, '–ß—Ç–æ', reply_markup=a)
            # if not checkClick(chat_id, clickIdTimes, 30*60):
            #     bot.send_message(chat_id, "üìå–í–∏ –≤–∂–µ –∑–∞–ø–∏—Å–∞–ª–∏—Å—è \n –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ")
            #     return
            vid = bot.send_message(chat_id, '–ù–∞–ø–∏—à–∏ –º–∞—Ä–∫—É —Ç–∞ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ')
            bot.register_next_step_handler(vid, regist_1)

def regist_1(message):
    global marka
    global description
    global photo
    global category
    global price
    marka = message.text
    msg3 = bot.send_message(message.chat.id, "–í–∫–∞–∂–∏ –æ–ø–∏—Å –∞–≤—Ç–æ")
    bot.register_next_step_handler(msg3, regist_2)

def regist_2(message):
    global marka
    global description
    global photo
    global category
    global price
    description = message.text
    msg2 = bot.send_message(message.chat.id, "–ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ —Å–≤–æ–≥–æ –∞–≤—Ç–æ (—Ñ–æ—Ç–æ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º)")
    bot.register_next_step_handler(msg2, regist_3)

def regist_3(message):
    global marka
    global description
    global photo
    global category
    global price
    photo = message.text
    msg4 = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∞–≤—Ç–æ(–º–∞—Ä–∫—É)")
    bot.register_next_step_handler(msg4, regist_4)

def regist_4(message):
    global marka
    global description
    global photo
    global category
    global price
    category = message.text
    msg5 = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –±–∞–∂–∞–Ω—É —Ü—ñ–Ω—É –∑–∞ —è–∫—É –± –≤–∏ —Ö–æ—Ç—ñ–ª–∏ –ø—Ä–æ–¥–∞—Ç–∏ —Å–≤–æ—î –∞–≤—Ç–æ")
    bot.register_next_step_handler(msg5, regist_5)

def regist_5(message):
    global marka
    global description
    global photo
    global category
    global price
    price= message.text
    msg4 = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∑–Ω–∏–∂–∫—É(—è–∫—â–æ –Ω–µ–º–∞—î —Ç–æ –Ω–∞–ø–∏—ñ—à—Ç—å –ø—Ä–æ—Å—Ç–æ –Ω—É–ª—å)")
    bot.register_next_step_handler(msg4, regist_6)

def regist_6(message):
    global marka
    global description
    global photo
    global category
    global price
    global sale
    sale = message.text
    msg4 = bot.send_message(message.chat.id, "–î—è–∫—É—é—î–º–æ! –í–∞—à–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –±—É–¥–µ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–µ –ø—ñ—Å–ª—è —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    admin_id = (1132004570)
    bot.send_message(admin_id, f"üìç–ù–æ–≤–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è: \n : –ù—ñ–∫–Ω–µ–π–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {message.from_user.username} \n –ú–∞—Ä–∫–∞ –∞–≤—Ç–æ: {marka}\n –û–ø–∏—Å –∞–≤—Ç–æ: {description} \n –§–æ—Ç–æ —Ç/–∑: {photo} \n –¶—ñ–Ω–∞: {price} \n –ó–Ω–∏–∂–∫–∞: {sale}")
    user = message.from_user.id
    if (user == 1132004570):  
        if message.chat.type == 'private':
            msg4 = bot.send_message(message.chat.id, "–î–æ–¥–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç?")
            bot.register_next_step_handler(msg4, regist_7)
        
def regist_7(message):
    global answer
    connection = sqlite3.connect('instance/portfolio.db')
    cursor = connection.cursor()
    answer = message.text
    if answer== 'true':
        cursor.execute("INSERT INTO item (title, description, category, image, price, sale) VALUES (?, ?, ?, ?, ?, ?)", (marka, description,category, photo, price, sale))
        connection.commit()
        print("Data inserted successfully.")
        bot.send_message(message.chat.id, "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —Å—Ö–≤–∞–ª–∏–≤ –∑–∞–ø–∏—Ç, –≤–∞—à–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–µ–∑–∞–±–∞—Ä–æ–º –±—É–∂–µ –¥–æ–¥–∞–Ω–æ –Ω–∞ —Å–∞–π—Ç")
        connection.close()
    else:
        bot.send_message(message.chat.id, "–ù–∞–∂–∞–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ —Å—Ö–≤–∞–ª–∏–≤ –≤–∞—à –∑–∞–ø–∏—Ç")
        print("Data inserted unsuccessfully.")

            

   

    
    # except sqlite3.Error as e:
    #     print("SQLite error:", e)
    # finally:
        

if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)